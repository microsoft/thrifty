import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()

        // workaround for https://youtrack.jetbrains.com/issue/KT-51379
        exclusiveContent {
            forRepository {
                ivy {
                    url = "https://download.jetbrains.com/kotlin/native/builds"
                    name = "Kotlin Native"
                    patternLayout {

                        // example download URLs:
                        // https://download.jetbrains.com/kotlin/native/builds/releases/1.7.20/linux-x86_64/kotlin-native-prebuilt-linux-x86_64-1.7.20.tar.gz
                        // https://download.jetbrains.com/kotlin/native/builds/releases/1.7.20/windows-x86_64/kotlin-native-prebuilt-windows-x86_64-1.7.20.zip
                        // https://download.jetbrains.com/kotlin/native/builds/releases/1.7.20/macos-x86_64/kotlin-native-prebuilt-macos-x86_64-1.7.20.tar.gz
                        [
                                "macos-x86_64",
                                "macos-aarch64",
                                "osx-x86_64",
                                "osx-aarch64",
                                "linux-x86_64",
                                "windows-x86_64",
                        ].forEach { os ->
                            ["dev", "releases"].forEach { stage ->
                                artifact("$stage/[revision]/$os/[artifact]-[revision].[ext]")
                            }
                        }
                    }
                    metadataSources { artifact() }
                }
            }
            filter { includeModuleByRegex(".*", ".*kotlin-native-prebuilt.*") }
        }
    }
}

buildCache {
    local {
        directory = new File(rootDir, ".build-cache")
        removeUnusedEntriesAfterDays = 30
    }
}

includeBuild 'build-src'

rootProject.name = 'thrifty'
include 'thrifty-schema'
include 'thrifty-runtime'
include 'thrifty-java-codegen'
include 'thrifty-kotlin-codegen'
include 'thrifty-compiler'
include 'thrifty-example-postprocessor'
include 'thrifty-compiler-plugins'
include 'thrifty-test-server'
include 'thrifty-integration-tests'
include 'thrifty-gradle-plugin'
